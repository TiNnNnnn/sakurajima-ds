// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: tinnraft.proto

package tinnraftpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntryType int32

const (
	EntryType_EntryData       EntryType = 0
	EntryType_EntryConfUpdate EntryType = 1
)

// Enum value maps for EntryType.
var (
	EntryType_name = map[int32]string{
		0: "EntryData",
		1: "EntryConfUpdate",
	}
	EntryType_value = map[string]int32{
		"EntryData":       0,
		"EntryConfUpdate": 1,
	}
)

func (x EntryType) Enum() *EntryType {
	p := new(EntryType)
	*p = x
	return p
}

func (x EntryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntryType) Descriptor() protoreflect.EnumDescriptor {
	return file_tinnraft_proto_enumTypes[0].Descriptor()
}

func (EntryType) Type() protoreflect.EnumType {
	return &file_tinnraft_proto_enumTypes[0]
}

func (x EntryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntryType.Descriptor instead.
func (EntryType) EnumDescriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{0}
}

type OpType int32

const (
	OpType_Put           OpType = 0
	OpType_Append        OpType = 1
	OpType_Get           OpType = 2
	OpType_ConfigChange  OpType = 3
	OpType_DeleteBuckets OpType = 4
	OpType_InsertBuckets OpType = 5
)

// Enum value maps for OpType.
var (
	OpType_name = map[int32]string{
		0: "Put",
		1: "Append",
		2: "Get",
		3: "ConfigChange",
		4: "DeleteBuckets",
		5: "InsertBuckets",
	}
	OpType_value = map[string]int32{
		"Put":           0,
		"Append":        1,
		"Get":           2,
		"ConfigChange":  3,
		"DeleteBuckets": 4,
		"InsertBuckets": 5,
	}
)

func (x OpType) Enum() *OpType {
	p := new(OpType)
	*p = x
	return p
}

func (x OpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpType) Descriptor() protoreflect.EnumDescriptor {
	return file_tinnraft_proto_enumTypes[1].Descriptor()
}

func (OpType) Type() protoreflect.EnumType {
	return &file_tinnraft_proto_enumTypes[1]
}

func (x OpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpType.Descriptor instead.
func (OpType) EnumDescriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{1}
}

// 配置服务器相关操作
// 1 Join: 将一个新的分组服务器加入集群配置
// 2 Leave: 将一个分组服务器从集群配置中删除
// 3 Move: 将某个桶分配给相应的分组
// 4 Query: 查询配置信息
type ConfigOpType int32

const (
	ConfigOpType_Join  ConfigOpType = 0
	ConfigOpType_Leave ConfigOpType = 1
	ConfigOpType_Move  ConfigOpType = 2
	ConfigOpType_Query ConfigOpType = 3
)

// Enum value maps for ConfigOpType.
var (
	ConfigOpType_name = map[int32]string{
		0: "Join",
		1: "Leave",
		2: "Move",
		3: "Query",
	}
	ConfigOpType_value = map[string]int32{
		"Join":  0,
		"Leave": 1,
		"Move":  2,
		"Query": 3,
	}
)

func (x ConfigOpType) Enum() *ConfigOpType {
	p := new(ConfigOpType)
	*p = x
	return p
}

func (x ConfigOpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigOpType) Descriptor() protoreflect.EnumDescriptor {
	return file_tinnraft_proto_enumTypes[2].Descriptor()
}

func (ConfigOpType) Type() protoreflect.EnumType {
	return &file_tinnraft_proto_enumTypes[2]
}

func (x ConfigOpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigOpType.Descriptor instead.
func (ConfigOpType) EnumDescriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{2}
}

// shared服务器分组相关操作
type BucketOpType int32

const (
	BucketOpType_GetData BucketOpType = 0
	BucketOpType_DelData BucketOpType = 1
	BucketOpType_AddData BucketOpType = 2
)

// Enum value maps for BucketOpType.
var (
	BucketOpType_name = map[int32]string{
		0: "GetData",
		1: "DelData",
		2: "AddData",
	}
	BucketOpType_value = map[string]int32{
		"GetData": 0,
		"DelData": 1,
		"AddData": 2,
	}
)

func (x BucketOpType) Enum() *BucketOpType {
	p := new(BucketOpType)
	*p = x
	return p
}

func (x BucketOpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BucketOpType) Descriptor() protoreflect.EnumDescriptor {
	return file_tinnraft_proto_enumTypes[3].Descriptor()
}

func (BucketOpType) Type() protoreflect.EnumType {
	return &file_tinnraft_proto_enumTypes[3]
}

func (x BucketOpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BucketOpType.Descriptor instead.
func (BucketOpType) EnumDescriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{3}
}

// 元数据服务模块
type MetaOpType2 int32

const (
	MetaOpType2_PutName       MetaOpType2 = 0
	MetaOpType2_PutObject     MetaOpType2 = 1
	MetaOpType2_GetObjectList MetaOpType2 = 2
	MetaOpType2_QueryList     MetaOpType2 = 3
)

// Enum value maps for MetaOpType2.
var (
	MetaOpType2_name = map[int32]string{
		0: "PutName",
		1: "PutObject",
		2: "GetObjectList",
		3: "QueryList",
	}
	MetaOpType2_value = map[string]int32{
		"PutName":       0,
		"PutObject":     1,
		"GetObjectList": 2,
		"QueryList":     3,
	}
)

func (x MetaOpType2) Enum() *MetaOpType2 {
	p := new(MetaOpType2)
	*p = x
	return p
}

func (x MetaOpType2) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetaOpType2) Descriptor() protoreflect.EnumDescriptor {
	return file_tinnraft_proto_enumTypes[4].Descriptor()
}

func (MetaOpType2) Type() protoreflect.EnumType {
	return &file_tinnraft_proto_enumTypes[4]
}

func (x MetaOpType2) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetaOpType2.Descriptor instead.
func (MetaOpType2) EnumDescriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{4}
}

type MetaOpType int32

const (
	MetaOpType_PutMetadata          MetaOpType = 0
	MetaOpType_GetMetadata          MetaOpType = 1
	MetaOpType_SearchLastestVersion MetaOpType = 2
	MetaOpType_SearchAllVersion     MetaOpType = 3
	MetaOpType_DelMetadata          MetaOpType = 4
	MetaOpType_AddVersion           MetaOpType = 5
)

// Enum value maps for MetaOpType.
var (
	MetaOpType_name = map[int32]string{
		0: "PutMetadata",
		1: "GetMetadata",
		2: "SearchLastestVersion",
		3: "SearchAllVersion",
		4: "DelMetadata",
		5: "AddVersion",
	}
	MetaOpType_value = map[string]int32{
		"PutMetadata":          0,
		"GetMetadata":          1,
		"SearchLastestVersion": 2,
		"SearchAllVersion":     3,
		"DelMetadata":          4,
		"AddVersion":           5,
	}
)

func (x MetaOpType) Enum() *MetaOpType {
	p := new(MetaOpType)
	*p = x
	return p
}

func (x MetaOpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetaOpType) Descriptor() protoreflect.EnumDescriptor {
	return file_tinnraft_proto_enumTypes[5].Descriptor()
}

func (MetaOpType) Type() protoreflect.EnumType {
	return &file_tinnraft_proto_enumTypes[5]
}

func (x MetaOpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetaOpType.Descriptor instead.
func (MetaOpType) EnumDescriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{5}
}

type LogOp int32

const (
	LogOp_GetAll LogOp = 0
)

// Enum value maps for LogOp.
var (
	LogOp_name = map[int32]string{
		0: "GetAll",
	}
	LogOp_value = map[string]int32{
		"GetAll": 0,
	}
)

func (x LogOp) Enum() *LogOp {
	p := new(LogOp)
	*p = x
	return p
}

func (x LogOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogOp) Descriptor() protoreflect.EnumDescriptor {
	return file_tinnraft_proto_enumTypes[6].Descriptor()
}

func (LogOp) Type() protoreflect.EnumType {
	return &file_tinnraft_proto_enumTypes[6]
}

func (x LogOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogOp.Descriptor instead.
func (LogOp) EnumDescriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{6}
}

type RequestVoteArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term         int64 `protobuf:"varint,1,opt,name=Term,proto3" json:"Term,omitempty"`
	CandidateId  int64 `protobuf:"varint,2,opt,name=CandidateId,proto3" json:"CandidateId,omitempty"`
	LastLogIndex int64 `protobuf:"varint,3,opt,name=LastLogIndex,proto3" json:"LastLogIndex,omitempty"`
	LastLogTerm  int64 `protobuf:"varint,4,opt,name=LastLogTerm,proto3" json:"LastLogTerm,omitempty"`
}

func (x *RequestVoteArgs) Reset() {
	*x = RequestVoteArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestVoteArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVoteArgs) ProtoMessage() {}

func (x *RequestVoteArgs) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVoteArgs.ProtoReflect.Descriptor instead.
func (*RequestVoteArgs) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{0}
}

func (x *RequestVoteArgs) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *RequestVoteArgs) GetCandidateId() int64 {
	if x != nil {
		return x.CandidateId
	}
	return 0
}

func (x *RequestVoteArgs) GetLastLogIndex() int64 {
	if x != nil {
		return x.LastLogIndex
	}
	return 0
}

func (x *RequestVoteArgs) GetLastLogTerm() int64 {
	if x != nil {
		return x.LastLogTerm
	}
	return 0
}

type RequestVoteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term        int64 `protobuf:"varint,1,opt,name=Term,proto3" json:"Term,omitempty"`
	VoteGranted bool  `protobuf:"varint,2,opt,name=VoteGranted,proto3" json:"VoteGranted,omitempty"`
}

func (x *RequestVoteReply) Reset() {
	*x = RequestVoteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestVoteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVoteReply) ProtoMessage() {}

func (x *RequestVoteReply) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVoteReply.ProtoReflect.Descriptor instead.
func (*RequestVoteReply) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{1}
}

func (x *RequestVoteReply) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *RequestVoteReply) GetVoteGranted() bool {
	if x != nil {
		return x.VoteGranted
	}
	return false
}

type Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  EntryType `protobuf:"varint,1,opt,name=Type,proto3,enum=pbs.EntryType" json:"Type,omitempty"`
	Term  uint64    `protobuf:"varint,2,opt,name=Term,proto3" json:"Term,omitempty"`
	Index int64     `protobuf:"varint,3,opt,name=Index,proto3" json:"Index,omitempty"`
	Data  []byte    `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *Entry) Reset() {
	*x = Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{2}
}

func (x *Entry) GetType() EntryType {
	if x != nil {
		return x.Type
	}
	return EntryType_EntryData
}

func (x *Entry) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *Entry) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Entry) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AppendEntriesArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term         int64    `protobuf:"varint,1,opt,name=Term,proto3" json:"Term,omitempty"`
	LeaderId     int64    `protobuf:"varint,2,opt,name=LeaderId,proto3" json:"LeaderId,omitempty"`
	PrevLogIndex int64    `protobuf:"varint,3,opt,name=PrevLogIndex,proto3" json:"PrevLogIndex,omitempty"`
	PrevLogTerm  int64    `protobuf:"varint,4,opt,name=PrevLogTerm,proto3" json:"PrevLogTerm,omitempty"`
	Entries      []*Entry `protobuf:"bytes,5,rep,name=Entries,proto3" json:"Entries,omitempty"`
	LeaderCommit int64    `protobuf:"varint,6,opt,name=LeaderCommit,proto3" json:"LeaderCommit,omitempty"`
}

func (x *AppendEntriesArgs) Reset() {
	*x = AppendEntriesArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendEntriesArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntriesArgs) ProtoMessage() {}

func (x *AppendEntriesArgs) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntriesArgs.ProtoReflect.Descriptor instead.
func (*AppendEntriesArgs) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{3}
}

func (x *AppendEntriesArgs) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntriesArgs) GetLeaderId() int64 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

func (x *AppendEntriesArgs) GetPrevLogIndex() int64 {
	if x != nil {
		return x.PrevLogIndex
	}
	return 0
}

func (x *AppendEntriesArgs) GetPrevLogTerm() int64 {
	if x != nil {
		return x.PrevLogTerm
	}
	return 0
}

func (x *AppendEntriesArgs) GetEntries() []*Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *AppendEntriesArgs) GetLeaderCommit() int64 {
	if x != nil {
		return x.LeaderCommit
	}
	return 0
}

type AppendEntriesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term     int64 `protobuf:"varint,1,opt,name=Term,proto3" json:"Term,omitempty"`
	Success  bool  `protobuf:"varint,2,opt,name=Success,proto3" json:"Success,omitempty"`
	Conflict bool  `protobuf:"varint,3,opt,name=Conflict,proto3" json:"Conflict,omitempty"`
	XTerm    int64 `protobuf:"varint,4,opt,name=XTerm,proto3" json:"XTerm,omitempty"`
	XIndex   int64 `protobuf:"varint,5,opt,name=XIndex,proto3" json:"XIndex,omitempty"`
	XLen     int64 `protobuf:"varint,6,opt,name=XLen,proto3" json:"XLen,omitempty"`
}

func (x *AppendEntriesReply) Reset() {
	*x = AppendEntriesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendEntriesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntriesReply) ProtoMessage() {}

func (x *AppendEntriesReply) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntriesReply.ProtoReflect.Descriptor instead.
func (*AppendEntriesReply) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{4}
}

func (x *AppendEntriesReply) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntriesReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AppendEntriesReply) GetConflict() bool {
	if x != nil {
		return x.Conflict
	}
	return false
}

func (x *AppendEntriesReply) GetXTerm() int64 {
	if x != nil {
		return x.XTerm
	}
	return 0
}

func (x *AppendEntriesReply) GetXIndex() int64 {
	if x != nil {
		return x.XIndex
	}
	return 0
}

func (x *AppendEntriesReply) GetXLen() int64 {
	if x != nil {
		return x.XLen
	}
	return 0
}

type ApplyMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandValid  bool   `protobuf:"varint,1,opt,name=CommandValid,proto3" json:"CommandValid,omitempty"`
	Command       []byte `protobuf:"bytes,2,opt,name=Command,proto3" json:"Command,omitempty"`
	CommandIndex  int64  `protobuf:"varint,3,opt,name=CommandIndex,proto3" json:"CommandIndex,omitempty"`
	CommandTerm   int64  `protobuf:"varint,4,opt,name=CommandTerm,proto3" json:"CommandTerm,omitempty"`
	SnapshotValid bool   `protobuf:"varint,5,opt,name=SnapshotValid,proto3" json:"SnapshotValid,omitempty"`
	Snapshot      []byte `protobuf:"bytes,6,opt,name=Snapshot,proto3" json:"Snapshot,omitempty"`
	SnapshotTerm  int64  `protobuf:"varint,7,opt,name=SnapshotTerm,proto3" json:"SnapshotTerm,omitempty"`
	SnapshotIndex int64  `protobuf:"varint,8,opt,name=SnapshotIndex,proto3" json:"SnapshotIndex,omitempty"`
}

func (x *ApplyMsg) Reset() {
	*x = ApplyMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyMsg) ProtoMessage() {}

func (x *ApplyMsg) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyMsg.ProtoReflect.Descriptor instead.
func (*ApplyMsg) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{5}
}

func (x *ApplyMsg) GetCommandValid() bool {
	if x != nil {
		return x.CommandValid
	}
	return false
}

func (x *ApplyMsg) GetCommand() []byte {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *ApplyMsg) GetCommandIndex() int64 {
	if x != nil {
		return x.CommandIndex
	}
	return 0
}

func (x *ApplyMsg) GetCommandTerm() int64 {
	if x != nil {
		return x.CommandTerm
	}
	return 0
}

func (x *ApplyMsg) GetSnapshotValid() bool {
	if x != nil {
		return x.SnapshotValid
	}
	return false
}

func (x *ApplyMsg) GetSnapshot() []byte {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

func (x *ApplyMsg) GetSnapshotTerm() int64 {
	if x != nil {
		return x.SnapshotTerm
	}
	return 0
}

func (x *ApplyMsg) GetSnapshotIndex() int64 {
	if x != nil {
		return x.SnapshotIndex
	}
	return 0
}

type InstallSnapshotArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term              int64  `protobuf:"varint,1,opt,name=Term,proto3" json:"Term,omitempty"`
	LeaderId          int64  `protobuf:"varint,2,opt,name=LeaderId,proto3" json:"LeaderId,omitempty"`
	LastIncludedIndex int64  `protobuf:"varint,3,opt,name=LastIncludedIndex,proto3" json:"LastIncludedIndex,omitempty"`
	LastIncludeTerm   int64  `protobuf:"varint,4,opt,name=LastIncludeTerm,proto3" json:"LastIncludeTerm,omitempty"`
	Data              []byte `protobuf:"bytes,5,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *InstallSnapshotArgs) Reset() {
	*x = InstallSnapshotArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallSnapshotArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSnapshotArgs) ProtoMessage() {}

func (x *InstallSnapshotArgs) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSnapshotArgs.ProtoReflect.Descriptor instead.
func (*InstallSnapshotArgs) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{6}
}

func (x *InstallSnapshotArgs) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *InstallSnapshotArgs) GetLeaderId() int64 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

func (x *InstallSnapshotArgs) GetLastIncludedIndex() int64 {
	if x != nil {
		return x.LastIncludedIndex
	}
	return 0
}

func (x *InstallSnapshotArgs) GetLastIncludeTerm() int64 {
	if x != nil {
		return x.LastIncludeTerm
	}
	return 0
}

func (x *InstallSnapshotArgs) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type InstallSnapshotReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term int64 `protobuf:"varint,1,opt,name=Term,proto3" json:"Term,omitempty"`
}

func (x *InstallSnapshotReply) Reset() {
	*x = InstallSnapshotReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallSnapshotReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSnapshotReply) ProtoMessage() {}

func (x *InstallSnapshotReply) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSnapshotReply.ProtoReflect.Descriptor instead.
func (*InstallSnapshotReply) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{7}
}

func (x *InstallSnapshotReply) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

type CommandArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value     string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	OpType    OpType `protobuf:"varint,3,opt,name=Op_type,json=OpType,proto3,enum=pbs.OpType" json:"Op_type,omitempty"`
	ClientId  int64  `protobuf:"varint,4,opt,name=Client_id,json=ClientId,proto3" json:"Client_id,omitempty"`
	CommandId int64  `protobuf:"varint,5,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	Context   []byte `protobuf:"bytes,6,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *CommandArgs) Reset() {
	*x = CommandArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandArgs) ProtoMessage() {}

func (x *CommandArgs) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandArgs.ProtoReflect.Descriptor instead.
func (*CommandArgs) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{8}
}

func (x *CommandArgs) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CommandArgs) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CommandArgs) GetOpType() OpType {
	if x != nil {
		return x.OpType
	}
	return OpType_Put
}

func (x *CommandArgs) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *CommandArgs) GetCommandId() int64 {
	if x != nil {
		return x.CommandId
	}
	return 0
}

func (x *CommandArgs) GetContext() []byte {
	if x != nil {
		return x.Context
	}
	return nil
}

type CommandReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value    string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
	LeaderId int64  `protobuf:"varint,2,opt,name=LeaderId,proto3" json:"LeaderId,omitempty"`
	ErrCode  int64  `protobuf:"varint,3,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
}

func (x *CommandReply) Reset() {
	*x = CommandReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandReply) ProtoMessage() {}

func (x *CommandReply) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandReply.ProtoReflect.Descriptor instead.
func (*CommandReply) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{9}
}

func (x *CommandReply) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CommandReply) GetLeaderId() int64 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

func (x *CommandReply) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

type ConfigArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servers       map[int64]string `protobuf:"bytes,1,rep,name=Servers,proto3" json:"Servers,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	GroupIds      []int64          `protobuf:"varint,2,rep,packed,name=groupIds,proto3" json:"groupIds,omitempty"`
	BucketId      int64            `protobuf:"varint,3,opt,name=BucketId,proto3" json:"BucketId,omitempty"`
	GroupId       int64            `protobuf:"varint,4,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	ConfigVersion int64            `protobuf:"varint,5,opt,name=ConfigVersion,proto3" json:"ConfigVersion,omitempty"`
	OpType        ConfigOpType     `protobuf:"varint,6,opt,name=OpType,proto3,enum=pbs.ConfigOpType" json:"OpType,omitempty"`
	ClientId      int64            `protobuf:"varint,7,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	CommandId     int64            `protobuf:"varint,8,opt,name=CommandId,proto3" json:"CommandId,omitempty"`
}

func (x *ConfigArgs) Reset() {
	*x = ConfigArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigArgs) ProtoMessage() {}

func (x *ConfigArgs) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigArgs.ProtoReflect.Descriptor instead.
func (*ConfigArgs) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{10}
}

func (x *ConfigArgs) GetServers() map[int64]string {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *ConfigArgs) GetGroupIds() []int64 {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *ConfigArgs) GetBucketId() int64 {
	if x != nil {
		return x.BucketId
	}
	return 0
}

func (x *ConfigArgs) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ConfigArgs) GetConfigVersion() int64 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

func (x *ConfigArgs) GetOpType() ConfigOpType {
	if x != nil {
		return x.OpType
	}
	return ConfigOpType_Join
}

func (x *ConfigArgs) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *ConfigArgs) GetCommandId() int64 {
	if x != nil {
		return x.CommandId
	}
	return 0
}

type ServerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigVersion int64            `protobuf:"varint,1,opt,name=ConfigVersion,proto3" json:"ConfigVersion,omitempty"`                                                                           //配置信息版本
	Buckets       []int64          `protobuf:"varint,2,rep,packed,name=Buckets,proto3" json:"Buckets,omitempty"`                                                                                //bucket数组
	Groups        map[int64]string `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 集群分组信息
}

func (x *ServerConfig) Reset() {
	*x = ServerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig) ProtoMessage() {}

func (x *ServerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConfig.ProtoReflect.Descriptor instead.
func (*ServerConfig) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{11}
}

func (x *ServerConfig) GetConfigVersion() int64 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

func (x *ServerConfig) GetBuckets() []int64 {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *ServerConfig) GetGroups() map[int64]string {
	if x != nil {
		return x.Groups
	}
	return nil
}

type ConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrMsg   string        `protobuf:"bytes,1,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	Config   *ServerConfig `protobuf:"bytes,2,opt,name=Config,proto3" json:"Config,omitempty"`
	LeaderId int64         `protobuf:"varint,3,opt,name=LeaderId,proto3" json:"LeaderId,omitempty"`
	ErrCode  int64         `protobuf:"varint,4,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
}

func (x *ConfigReply) Reset() {
	*x = ConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigReply) ProtoMessage() {}

func (x *ConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigReply.ProtoReflect.Descriptor instead.
func (*ConfigReply) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{12}
}

func (x *ConfigReply) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *ConfigReply) GetConfig() *ServerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ConfigReply) GetLeaderId() int64 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

func (x *ConfigReply) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

type BucketOpArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigVersion int64        `protobuf:"varint,1,opt,name=ConfigVersion,proto3" json:"ConfigVersion,omitempty"`
	BucketIds     []int64      `protobuf:"varint,2,rep,packed,name=BucketIds,proto3" json:"BucketIds,omitempty"`
	BucketOpType  BucketOpType `protobuf:"varint,3,opt,name=BucketOpType,proto3,enum=pbs.BucketOpType" json:"BucketOpType,omitempty"`
	GroupId       int64        `protobuf:"varint,4,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	BucketsData   []byte       `protobuf:"bytes,5,opt,name=BucketsData,proto3" json:"BucketsData,omitempty"`
}

func (x *BucketOpArgs) Reset() {
	*x = BucketOpArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketOpArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketOpArgs) ProtoMessage() {}

func (x *BucketOpArgs) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketOpArgs.ProtoReflect.Descriptor instead.
func (*BucketOpArgs) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{13}
}

func (x *BucketOpArgs) GetConfigVersion() int64 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

func (x *BucketOpArgs) GetBucketIds() []int64 {
	if x != nil {
		return x.BucketIds
	}
	return nil
}

func (x *BucketOpArgs) GetBucketOpType() BucketOpType {
	if x != nil {
		return x.BucketOpType
	}
	return BucketOpType_GetData
}

func (x *BucketOpArgs) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *BucketOpArgs) GetBucketsData() []byte {
	if x != nil {
		return x.BucketsData
	}
	return nil
}

type BucketOpReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigVersion int64  `protobuf:"varint,1,opt,name=ConfigVersion,proto3" json:"ConfigVersion,omitempty"`
	BucketData    []byte `protobuf:"bytes,2,opt,name=BucketData,proto3" json:"BucketData,omitempty"`
	ErrMsg        string `protobuf:"bytes,3,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
}

func (x *BucketOpReply) Reset() {
	*x = BucketOpReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketOpReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketOpReply) ProtoMessage() {}

func (x *BucketOpReply) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketOpReply.ProtoReflect.Descriptor instead.
func (*BucketOpReply) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{14}
}

func (x *BucketOpReply) GetConfigVersion() int64 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

func (x *BucketOpReply) GetBucketData() []byte {
	if x != nil {
		return x.BucketData
	}
	return nil
}

func (x *BucketOpReply) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

// 数据块描述
type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataTableName string `protobuf:"bytes,1,opt,name=DataTableName,proto3" json:"DataTableName,omitempty"` //数据块表表名
	BlockSize     int64  `protobuf:"varint,2,opt,name=BlockSize,proto3" json:"BlockSize,omitempty"`        //数据块大小
	BlockId       int64  `protobuf:"varint,3,opt,name=BlockId,proto3" json:"BlockId,omitempty"`            //数据块Id
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{15}
}

func (x *Block) GetDataTableName() string {
	if x != nil {
		return x.DataTableName
	}
	return ""
}

func (x *Block) GetBlockSize() int64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *Block) GetBlockId() int64 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

// 一个对象的数据块列表
type DataBlocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockList []*Block `protobuf:"bytes,1,rep,name=BlockList,proto3" json:"BlockList,omitempty"` //一个对象被分割为多个block, 使用BlockList存储所有块信息
}

func (x *DataBlocks) Reset() {
	*x = DataBlocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataBlocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataBlocks) ProtoMessage() {}

func (x *DataBlocks) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataBlocks.ProtoReflect.Descriptor instead.
func (*DataBlocks) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{16}
}

func (x *DataBlocks) GetBlockList() []*Block {
	if x != nil {
		return x.BlockList
	}
	return nil
}

type MetaArgs2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpType     MetaOpType2 `protobuf:"varint,1,opt,name=OpType,proto3,enum=pbs.MetaOpType2" json:"OpType,omitempty"`
	BucketName string      `protobuf:"bytes,2,opt,name=BucketName,proto3" json:"BucketName,omitempty"`
	ObjectName string      `protobuf:"bytes,3,opt,name=ObjectName,proto3" json:"ObjectName,omitempty"`
	ObjectId   int64       `protobuf:"varint,4,opt,name=ObjectId,proto3" json:"ObjectId,omitempty"`
	Num        int64       `protobuf:"varint,5,opt,name=Num,proto3" json:"Num,omitempty"`
	BlockList  *DataBlocks `protobuf:"bytes,6,opt,name=BlockList,proto3" json:"BlockList,omitempty"`
}

func (x *MetaArgs2) Reset() {
	*x = MetaArgs2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaArgs2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaArgs2) ProtoMessage() {}

func (x *MetaArgs2) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaArgs2.ProtoReflect.Descriptor instead.
func (*MetaArgs2) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{17}
}

func (x *MetaArgs2) GetOpType() MetaOpType2 {
	if x != nil {
		return x.OpType
	}
	return MetaOpType2_PutName
}

func (x *MetaArgs2) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *MetaArgs2) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

func (x *MetaArgs2) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *MetaArgs2) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *MetaArgs2) GetBlockList() *DataBlocks {
	if x != nil {
		return x.BlockList
	}
	return nil
}

type MetaReply2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrMsg      string  `protobuf:"bytes,1,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	ErrCode     int64   `protobuf:"varint,2,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	LeaderId    int64   `protobuf:"varint,3,opt,name=LeaderId,proto3" json:"LeaderId,omitempty"`
	BlockId     int64   `protobuf:"varint,4,opt,name=BlockId,proto3" json:"BlockId,omitempty"`
	BlockIdList []int64 `protobuf:"varint,6,rep,packed,name=BlockIdList,proto3" json:"BlockIdList,omitempty"`
}

func (x *MetaReply2) Reset() {
	*x = MetaReply2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaReply2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaReply2) ProtoMessage() {}

func (x *MetaReply2) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaReply2.ProtoReflect.Descriptor instead.
func (*MetaReply2) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{18}
}

func (x *MetaReply2) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *MetaReply2) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *MetaReply2) GetLeaderId() int64 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

func (x *MetaReply2) GetBlockId() int64 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

func (x *MetaReply2) GetBlockIdList() []int64 {
	if x != nil {
		return x.BlockIdList
	}
	return nil
}

type MetaArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op         MetaOpType `protobuf:"varint,1,opt,name=op,proto3,enum=pbs.MetaOpType" json:"op,omitempty"`
	UserId     int64      `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	BucketName string     `protobuf:"bytes,3,opt,name=BucketName,proto3" json:"BucketName,omitempty"`
	ObjectName string     `protobuf:"bytes,4,opt,name=ObjectName,proto3" json:"ObjectName,omitempty"`
	Version    int64      `protobuf:"varint,5,opt,name=Version,proto3" json:"Version,omitempty"`
	Size       int64      `protobuf:"varint,6,opt,name=Size,proto3" json:"Size,omitempty"`
	Hash       string     `protobuf:"bytes,7,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (x *MetaArgs) Reset() {
	*x = MetaArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaArgs) ProtoMessage() {}

func (x *MetaArgs) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaArgs.ProtoReflect.Descriptor instead.
func (*MetaArgs) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{19}
}

func (x *MetaArgs) GetOp() MetaOpType {
	if x != nil {
		return x.Op
	}
	return MetaOpType_PutMetadata
}

func (x *MetaArgs) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MetaArgs) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *MetaArgs) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

func (x *MetaArgs) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *MetaArgs) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MetaArgs) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	BucketName string `protobuf:"bytes,3,opt,name=BucketName,proto3" json:"BucketName,omitempty"`
	ObjectName string `protobuf:"bytes,4,opt,name=ObjectName,proto3" json:"ObjectName,omitempty"`
	Version    int64  `protobuf:"varint,5,opt,name=Version,proto3" json:"Version,omitempty"`
	Size       int64  `protobuf:"varint,6,opt,name=Size,proto3" json:"Size,omitempty"`
	Hash       string `protobuf:"bytes,7,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{20}
}

func (x *Metadata) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Metadata) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *Metadata) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

func (x *Metadata) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Metadata) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Metadata) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type MetaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrMsg   string      `protobuf:"bytes,1,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	ErrCode  int64       `protobuf:"varint,2,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	LeaderId int64       `protobuf:"varint,3,opt,name=LeaderId,proto3" json:"LeaderId,omitempty"`
	Metas    []*Metadata `protobuf:"bytes,4,rep,name=metas,proto3" json:"metas,omitempty"`
	Meta     *Metadata   `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *MetaReply) Reset() {
	*x = MetaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaReply) ProtoMessage() {}

func (x *MetaReply) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaReply.ProtoReflect.Descriptor instead.
func (*MetaReply) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{21}
}

func (x *MetaReply) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *MetaReply) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *MetaReply) GetLeaderId() int64 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

func (x *MetaReply) GetMetas() []*Metadata {
	if x != nil {
		return x.Metas
	}
	return nil
}

func (x *MetaReply) GetMeta() *Metadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

type LogArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op LogOp `protobuf:"varint,1,opt,name=op,proto3,enum=pbs.LogOp" json:"op,omitempty"`
}

func (x *LogArgs) Reset() {
	*x = LogArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogArgs) ProtoMessage() {}

func (x *LogArgs) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogArgs.ProtoReflect.Descriptor instead.
func (*LogArgs) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{22}
}

func (x *LogArgs) GetOp() LogOp {
	if x != nil {
		return x.Op
	}
	return LogOp_GetAll
}

type LogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogMsg string `protobuf:"bytes,1,opt,name=LogMsg,proto3" json:"LogMsg,omitempty"`
}

func (x *LogReply) Reset() {
	*x = LogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinnraft_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogReply) ProtoMessage() {}

func (x *LogReply) ProtoReflect() protoreflect.Message {
	mi := &file_tinnraft_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogReply.ProtoReflect.Descriptor instead.
func (*LogReply) Descriptor() ([]byte, []int) {
	return file_tinnraft_proto_rawDescGZIP(), []int{23}
}

func (x *LogReply) GetLogMsg() string {
	if x != nil {
		return x.LogMsg
	}
	return ""
}

var File_tinnraft_proto protoreflect.FileDescriptor

var file_tinnraft_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x74, 0x69, 0x6e, 0x6e, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x70, 0x62, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x56, 0x6f, 0x74, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x72,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x20, 0x0a,
	0x0b, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x54, 0x65,
	0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x54, 0x65, 0x72, 0x6d, 0x22, 0x48, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x72,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x20, 0x0a,
	0x0b, 0x56, 0x6f, 0x74, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x56, 0x6f, 0x74, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x22,
	0x69, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x65, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x54, 0x65, 0x72, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xd3, 0x01, 0x0a, 0x11, 0x41,
	0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x54, 0x65, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x65, 0x76, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x50, 0x72, 0x65, 0x76, 0x4c, 0x6f, 0x67, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x76, 0x4c, 0x6f, 0x67, 0x54,
	0x65, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x50, 0x72, 0x65, 0x76, 0x4c,
	0x6f, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x24, 0x0a, 0x07, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x22, 0xa0, 0x01, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x72, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x58, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x58, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x58, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x58, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x12, 0x0a, 0x04, 0x58, 0x4c, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x58,
	0x4c, 0x65, 0x6e, 0x22, 0x9a, 0x02, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x73, 0x67,
	0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x65, 0x72,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x54, 0x65, 0x72, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0xb1, 0x01, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x72, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x4c, 0x61, 0x73, 0x74,
	0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x28, 0x0a, 0x0f, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x65, 0x72, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x2a, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x65, 0x72, 0x6d,
	0x22, 0xb1, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x4f, 0x70, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x73, 0x2e,
	0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x22, 0x5a, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0xdd, 0x02, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x72, 0x67, 0x73, 0x12,
	0x36, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x72, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x29, 0x0a, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x49, 0x64, 0x1a, 0x3a, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xc0, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x12, 0x35, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x87, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x29, 0x0a, 0x06, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62,
	0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xc5, 0x01,
	0x0a, 0x0c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70, 0x41, 0x72, 0x67, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x73, 0x12, 0x35, 0x0a, 0x0c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x6d, 0x0a, 0x0d, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4f,
	0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x22, 0x65, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x24, 0x0a,
	0x0d, 0x44, 0x61, 0x74, 0x61, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x44, 0x61, 0x74, 0x61, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x0a, 0x44,
	0x61, 0x74, 0x61, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x28, 0x0a, 0x09, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70,
	0x62, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0xd2, 0x01, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x41, 0x72, 0x67, 0x73,
	0x32, 0x12, 0x28, 0x0a, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x4f, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x32, 0x52, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75, 0x6d, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x12, 0x2d, 0x0a, 0x09, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x62, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x09, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x0a, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xc5, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1f,
	0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x73,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x02, 0x6f, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x22, 0xa4, 0x01, 0x0a, 0x08, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68,
	0x22, 0xa1, 0x01, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x05,
	0x6d, 0x65, 0x74, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x12, 0x21, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x22, 0x25, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x41, 0x72, 0x67, 0x73, 0x12,
	0x1a, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x70, 0x62,
	0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x4f, 0x70, 0x52, 0x02, 0x6f, 0x70, 0x22, 0x22, 0x0a, 0x08, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x4d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x6f, 0x67, 0x4d, 0x73, 0x67, 0x2a,
	0x2f, 0x0a, 0x09, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x01,
	0x2a, 0x5e, 0x0a, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x75,
	0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x10, 0x01, 0x12,
	0x07, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x10, 0x04, 0x12, 0x11, 0x0a,
	0x0d, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x10, 0x05,
	0x2a, 0x38, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65, 0x10, 0x02, 0x12,
	0x09, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x10, 0x03, 0x2a, 0x35, 0x0a, 0x0c, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x10,
	0x02, 0x2a, 0x4b, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x61, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x32,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x50, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x10, 0x02, 0x12,
	0x0d, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x10, 0x03, 0x2a, 0x7f,
	0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x61, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b,
	0x50, 0x75, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x10, 0x01, 0x12, 0x18,
	0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x41, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x03, 0x12, 0x0f,
	0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x10, 0x04, 0x12,
	0x0e, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x2a,
	0x13, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x4f, 0x70, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x10, 0x00, 0x32, 0xbf, 0x03, 0x0a, 0x0b, 0x52, 0x61, 0x66, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56,
	0x6f, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x56, 0x6f, 0x74, 0x65, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x73, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x17, 0x2e, 0x70, 0x62,
	0x73, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x08, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x19, 0x2e, 0x70,
	0x62, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x09, 0x44, 0x6f, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x2f, 0x0a,
	0x08, 0x44, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x73,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x33,
	0x0a, 0x08, 0x44, 0x6f, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x73,
	0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x12, 0x2e,
	0x70, 0x62, 0x73, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x06, 0x44, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x0d, 0x2e,
	0x70, 0x62, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x0e, 0x2e, 0x70,
	0x62, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x26,
	0x0a, 0x05, 0x44, 0x6f, 0x4c, 0x6f, 0x67, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x4c, 0x6f,
	0x67, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x0d, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2e, 0x2f, 0x74, 0x69, 0x6e,
	0x6e, 0x72, 0x61, 0x66, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tinnraft_proto_rawDescOnce sync.Once
	file_tinnraft_proto_rawDescData = file_tinnraft_proto_rawDesc
)

func file_tinnraft_proto_rawDescGZIP() []byte {
	file_tinnraft_proto_rawDescOnce.Do(func() {
		file_tinnraft_proto_rawDescData = protoimpl.X.CompressGZIP(file_tinnraft_proto_rawDescData)
	})
	return file_tinnraft_proto_rawDescData
}

var file_tinnraft_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_tinnraft_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_tinnraft_proto_goTypes = []interface{}{
	(EntryType)(0),               // 0: pbs.EntryType
	(OpType)(0),                  // 1: pbs.OpType
	(ConfigOpType)(0),            // 2: pbs.ConfigOpType
	(BucketOpType)(0),            // 3: pbs.BucketOpType
	(MetaOpType2)(0),             // 4: pbs.MetaOpType2
	(MetaOpType)(0),              // 5: pbs.MetaOpType
	(LogOp)(0),                   // 6: pbs.LogOp
	(*RequestVoteArgs)(nil),      // 7: pbs.RequestVoteArgs
	(*RequestVoteReply)(nil),     // 8: pbs.RequestVoteReply
	(*Entry)(nil),                // 9: pbs.Entry
	(*AppendEntriesArgs)(nil),    // 10: pbs.AppendEntriesArgs
	(*AppendEntriesReply)(nil),   // 11: pbs.AppendEntriesReply
	(*ApplyMsg)(nil),             // 12: pbs.ApplyMsg
	(*InstallSnapshotArgs)(nil),  // 13: pbs.InstallSnapshotArgs
	(*InstallSnapshotReply)(nil), // 14: pbs.InstallSnapshotReply
	(*CommandArgs)(nil),          // 15: pbs.CommandArgs
	(*CommandReply)(nil),         // 16: pbs.CommandReply
	(*ConfigArgs)(nil),           // 17: pbs.ConfigArgs
	(*ServerConfig)(nil),         // 18: pbs.ServerConfig
	(*ConfigReply)(nil),          // 19: pbs.ConfigReply
	(*BucketOpArgs)(nil),         // 20: pbs.BucketOpArgs
	(*BucketOpReply)(nil),        // 21: pbs.BucketOpReply
	(*Block)(nil),                // 22: pbs.Block
	(*DataBlocks)(nil),           // 23: pbs.DataBlocks
	(*MetaArgs2)(nil),            // 24: pbs.MetaArgs2
	(*MetaReply2)(nil),           // 25: pbs.MetaReply2
	(*MetaArgs)(nil),             // 26: pbs.MetaArgs
	(*Metadata)(nil),             // 27: pbs.Metadata
	(*MetaReply)(nil),            // 28: pbs.MetaReply
	(*LogArgs)(nil),              // 29: pbs.LogArgs
	(*LogReply)(nil),             // 30: pbs.LogReply
	nil,                          // 31: pbs.ConfigArgs.ServersEntry
	nil,                          // 32: pbs.ServerConfig.GroupsEntry
}
var file_tinnraft_proto_depIdxs = []int32{
	0,  // 0: pbs.Entry.Type:type_name -> pbs.EntryType
	9,  // 1: pbs.AppendEntriesArgs.Entries:type_name -> pbs.Entry
	1,  // 2: pbs.CommandArgs.Op_type:type_name -> pbs.OpType
	31, // 3: pbs.ConfigArgs.Servers:type_name -> pbs.ConfigArgs.ServersEntry
	2,  // 4: pbs.ConfigArgs.OpType:type_name -> pbs.ConfigOpType
	32, // 5: pbs.ServerConfig.groups:type_name -> pbs.ServerConfig.GroupsEntry
	18, // 6: pbs.ConfigReply.Config:type_name -> pbs.ServerConfig
	3,  // 7: pbs.BucketOpArgs.BucketOpType:type_name -> pbs.BucketOpType
	22, // 8: pbs.DataBlocks.BlockList:type_name -> pbs.Block
	4,  // 9: pbs.MetaArgs2.OpType:type_name -> pbs.MetaOpType2
	23, // 10: pbs.MetaArgs2.BlockList:type_name -> pbs.DataBlocks
	5,  // 11: pbs.MetaArgs.op:type_name -> pbs.MetaOpType
	27, // 12: pbs.MetaReply.metas:type_name -> pbs.Metadata
	27, // 13: pbs.MetaReply.meta:type_name -> pbs.Metadata
	6,  // 14: pbs.LogArgs.op:type_name -> pbs.LogOp
	7,  // 15: pbs.RaftService.RequestVote:input_type -> pbs.RequestVoteArgs
	10, // 16: pbs.RaftService.AppendEntries:input_type -> pbs.AppendEntriesArgs
	13, // 17: pbs.RaftService.Snapshot:input_type -> pbs.InstallSnapshotArgs
	15, // 18: pbs.RaftService.DoCommand:input_type -> pbs.CommandArgs
	17, // 19: pbs.RaftService.DoConfig:input_type -> pbs.ConfigArgs
	20, // 20: pbs.RaftService.DoBucket:input_type -> pbs.BucketOpArgs
	26, // 21: pbs.RaftService.DoMeta:input_type -> pbs.MetaArgs
	29, // 22: pbs.RaftService.DoLog:input_type -> pbs.LogArgs
	8,  // 23: pbs.RaftService.RequestVote:output_type -> pbs.RequestVoteReply
	11, // 24: pbs.RaftService.AppendEntries:output_type -> pbs.AppendEntriesReply
	14, // 25: pbs.RaftService.Snapshot:output_type -> pbs.InstallSnapshotReply
	16, // 26: pbs.RaftService.DoCommand:output_type -> pbs.CommandReply
	19, // 27: pbs.RaftService.DoConfig:output_type -> pbs.ConfigReply
	21, // 28: pbs.RaftService.DoBucket:output_type -> pbs.BucketOpReply
	28, // 29: pbs.RaftService.DoMeta:output_type -> pbs.MetaReply
	30, // 30: pbs.RaftService.DoLog:output_type -> pbs.LogReply
	23, // [23:31] is the sub-list for method output_type
	15, // [15:23] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_tinnraft_proto_init() }
func file_tinnraft_proto_init() {
	if File_tinnraft_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tinnraft_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestVoteArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestVoteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendEntriesArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendEntriesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallSnapshotArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallSnapshotReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketOpArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketOpReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataBlocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaArgs2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaReply2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinnraft_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tinnraft_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tinnraft_proto_goTypes,
		DependencyIndexes: file_tinnraft_proto_depIdxs,
		EnumInfos:         file_tinnraft_proto_enumTypes,
		MessageInfos:      file_tinnraft_proto_msgTypes,
	}.Build()
	File_tinnraft_proto = out.File
	file_tinnraft_proto_rawDesc = nil
	file_tinnraft_proto_goTypes = nil
	file_tinnraft_proto_depIdxs = nil
}
